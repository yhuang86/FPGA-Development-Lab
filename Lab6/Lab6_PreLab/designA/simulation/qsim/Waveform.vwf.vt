// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/06/2019 22:08:45"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          designA
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module designA_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Cin;
reg x0;
reg x1;
reg x2;
reg x3;
reg y0;
reg y1;
reg y2;
reg y3;
// wires                                               
wire Cout;
wire Over;
wire s0;
wire s1;
wire s2;
wire s3;

// assign statements (if any)                          
designA i1 (
// port map - connection between master ports and signals/registers   
	.Cin(Cin),
	.Cout(Cout),
	.Over(Over),
	.s0(s0),
	.s1(s1),
	.s2(s2),
	.s3(s3),
	.x0(x0),
	.x1(x1),
	.x2(x2),
	.x3(x3),
	.y0(y0),
	.y1(y1),
	.y2(y2),
	.y3(y3)
);
initial 
begin 
#180000 $finish;
end 

// Cin
initial
begin
	Cin = 1'b1;
end 

// x3
initial
begin
	x3 = 1'b0;
	x3 = #20000 1'b1;
	x3 = #40000 1'b0;
	x3 = #40000 1'b1;
	x3 = #40000 1'b0;
	x3 = #20000 1'b1;
end 

// x2
initial
begin
	x2 = 1'b1;
	x2 = #20000 1'b0;
	x2 = #40000 1'b1;
	x2 = #40000 1'b0;
	x2 = #40000 1'b1;
end 

// x1
initial
begin
	x1 = 1'b0;
	x1 = #20000 1'b1;
	x1 = #80000 1'b0;
	x1 = #20000 1'b1;
	x1 = #20000 1'b0;
end 

// x0
initial
begin
	x0 = 1'b1;
	x0 = #160000 1'b0;
end 

// y3
initial
begin
	y3 = 1'b0;
	y3 = #40000 1'b1;
	y3 = #20000 1'b0;
	y3 = #20000 1'b1;
	y3 = #40000 1'b0;
end 

// y2
initial
begin
	y2 = 1'b0;
	y2 = #40000 1'b1;
	y2 = #20000 1'b0;
	y2 = #20000 1'b1;
	y2 = #40000 1'b0;
	y2 = #40000 1'b1;
end 

// y1
initial
begin
	y1 = 1'b1;
	y1 = #160000 1'b0;
end 

// y0
initial
begin
	y0 = 1'b0;
	y0 = #160000 1'b1;
end 
endmodule

